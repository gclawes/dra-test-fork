name: Publish
on:
  push:

env:
  DRIVER_IMAGE_REGISTRY: "ghcr.io/${{ github.actor }}"
  DRIVER_CHART_REGISTRY: "ghcr.io/${{ github.repository }}/charts"

jobs:
  publish-release-artifacts:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: true
    steps:
      #- name: Set up QEMU
      #  uses: docker/setup-qemu-action@v3.4.0

      #- name: Install Cosign
      #  uses: sigstore/cosign-installer@main
      #  with:
      #    cosign-release: "v2.2.3"

      - name: Code checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3.6.1

      - name: Log into GHCR
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: make push-release-artifacts
        run: |
          make push-release-artifacts

  #unit-tests:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v4

  #    - uses: actions/setup-go@v5
  #      with:
  #        go-version-file: "go.mod"

  #publish-images:
  #  runs-on: ubuntu-latest
  #  #needs: [unit-tests]
  #  permissions:
  #    contents: read
  #    id-token: write # needed for signing the images with GitHub OIDC Token
  #  strategy:
  #    fail-fast: true
  #  steps:
  #    #- name: Set up QEMU
  #    #  uses: docker/setup-qemu-action@v3.4.0

  #    #- name: Install Cosign
  #    #  uses: sigstore/cosign-installer@main
  #    #  with:
  #    #    cosign-release: "v2.2.3"

  #    - name: Code checkout
  #      uses: actions/checkout@v4

  #    - name: Setup docker buildx
  #      uses: docker/setup-buildx-action@v3.6.1

  #    - name: Log into GHCR
  #      uses: docker/login-action@v3.3.0
  #      with:
  #        registry: ghcr.io
  #        username: ${{ github.actor }}
  #        password: ${{ secrets.GITHUB_TOKEN }}

  #    #- name: Docker meta dra-example-driver
  #    #  id: meta
  #    #  uses: docker/metadata-action@v5.6.1
  #    #  with:
  #    #    images: |
  #    #      ghcr.io/gclawes/dra-example-driver
  #    #    # generate Docker tags based on the following events/attributes
  #    #    tags: |
  #    #      type=ref,event=branch
  #    #      type=semver,pattern={{raw}}
  #    #    labels: |
  #    #      org.opencontainers.image.title=dra-example-driver
  #    #      org.opencontainers.image.description=dra-example-driver for metallb, a network load-balancer implementation for Kubernetes using standard routing protocols

  #    #- name: Build and push dra-example-driver
  #    #  uses: docker/build-push-action@v6.7.0
  #    #  id: build-and-push
  #    #  with:
  #    #    context: .
  #    #    tags: ${{ steps.meta.outputs.tags }}
  #    #    labels: ${{ steps.meta.outputs.labels }}
  #    #    file: deployments/container/Dockerfile
  #    #    platforms: linux/arm64
  #    #    cache-from: type=gha
  #    #    cache-to: type=gha,mode=max
  #    #    push: true
  #    #    build-args: |
  #    #      GIT_BRANCH: ${{ github.ref_name }}
  #    #      GIT_COMMIT: ${{ github.sha }}

  #    #- name: Cosign sign tags
  #    #  run: cosign sign --yes ${TAGS}
  #    #  env:
  #    #    TAGS: ${{ steps.meta.outputs.tags }}@${{ steps.build-and-push.outputs.digest }}
  #    #    COSIGN_EXPERIMENTAL: 1

  #release-charts:
  #  needs: [publish-images]
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v4
  #      with:
  #        # Fetch entire history. Required for chart-releaser; see https://github.com/helm/chart-releaser-action/issues/13#issuecomment-602063896
  #        fetch-depth: 0
  #    - name: Configure Git
  #      run: |
  #        git config user.name "$GITHUB_ACTOR"
  #        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

  #    - name: Log into GHCR
  #      uses: docker/login-action@v3.3.0
  #      with:
  #        registry: ghcr.io
  #        username: ${{ github.actor }}
  #        password: ${{ secrets.GITHUB_TOKEN }}

  #    - name: Configure Git
  #      run: |
  #        git config user.name "$GITHUB_ACTOR"
  #        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

  #    #- name: Run chart-releaser
  #    #  uses: helm/chart-releaser-action@v1.7.0
  #    #  env:
  #    #    CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
